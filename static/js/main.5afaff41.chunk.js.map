{"version":3,"sources":["components/search/Search.js","components/artist/Artist.js","components/tracks/Tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Search","state","artistQuery","updateArtistQuery","event","setState","target","value","handleKeyPress","key","searchArtist","props","className","onChange","this","onKeyPress","placeholder","onClick","Component","Artist","artist","images","name","followers","genres","total","style","fontFamily","join","src","url","alt","width","height","borderRadius","objectFit","Tracks","playing","audio","playingPreviewUrl","playAudio","previewurl","Audio","pause","play","trackIcon","track","preview_url","tracks","map","id","album","API_ADDRESS","App","fetch","then","response","json","artists","items","catch","error","alert","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5afaff41.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Search.css'\r\n\r\nclass Search extends Component\r\n{\r\n    state = { artistQuery: ''};\r\n    updateArtistQuery = event  => {\r\n        this.setState ({ artistQuery: event.target.value});\r\n      }\r\n      handleKeyPress = event =>\r\n      {\r\n        if(event.key ==='Enter')\r\n        {\r\n          this.searchArtist();\r\n        }\r\n      }\r\n    searchArtist = () => \r\n    {\r\n        this.props.searchArtist(this.state.artistQuery);\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className='search'>\r\n                <input onChange = {this.updateArtistQuery} onKeyPress= {this.handleKeyPress} placeholder='Search for an Artist' />\r\n                <SearchIcon onClick={this.searchArtist}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search;","import React from 'react';\r\nimport './Artist.css'\r\n\r\nconst Artist = ({ artist }) => \r\n{\r\n    if(!artist) return null;\r\n    const{ images, name, followers, genres} = artist;\r\n\r\n    return(\r\n        <div className=\"artist\">\r\n            <h2>{name}</h2>\r\n            <p><strong>{followers.total} Followers </strong></p>\r\n            <h4 style={{fontFamily: 'Economica'}}>{genres.join(',')}</h4>\r\n            <img src={images[0] && images[0].url} alt='artist-profile'\r\n            style ={{\r\n                width:250,\r\n                height:250,\r\n                borderRadius:150,\r\n                objectFit: 'cover',\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\nexport default Artist;","import React, {Component} from 'react';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport './Tracks.css'\r\n\r\nclass Tracks extends Component\r\n{\r\n    state = {playing : false, audio: null, playingPreviewUrl: null};\r\n    playAudio = previewurl => () =>\r\n    {\r\n        const audio = new Audio(previewurl);\r\n        if(!this.state.playing)\r\n        {\r\n            audio.play();\r\n            this.setState({ playing: true, audio, playingPreviewUrl: previewurl });\r\n        }\r\n        else\r\n        {\r\n            this.state.audio.pause();\r\n            if(this.state.playingPreviewUrl === previewurl)\r\n            {\r\n                this.setState({ playing: false });\r\n            }\r\n            else\r\n            {\r\n                audio.play();\r\n                this.setState({ audio, playingPreviewUrl: previewurl});\r\n            }\r\n        }\r\n    }\r\n    trackIcon = track =>\r\n    {\r\n        if(!track.preview_url)\r\n        {\r\n            return <span>N/A</span>;\r\n        }\r\n        if(this.state.playing && this.state.playingPreviewUrl === track.preview_url)\r\n        {\r\n            return <span><PauseCircleFilledIcon /></span>;\r\n        }\r\n        return <span><PlayCircleFilledIcon  /></span>;\r\n    }\r\n    render()\r\n    {\r\n        const { tracks } = this.props;\r\n\r\n        return(\r\n            <div className=\"tracks\">\r\n                {\r\n                    tracks.map(track =>\r\n                       {\r\n                        const {id, name, album, preview_url} = track;\r\n\r\n                        return(\r\n                            <div \r\n                            key={id} \r\n                            onClick={this.playAudio(preview_url)} \r\n                            >\r\n                                <div className=\"track\">\r\n                                    <img \r\n                                        src={album.images[0].url} \r\n                                        alt='track' \r\n                                        className='track-image' \r\n                                    />\r\n                                    <div className='track-text'><p>{name}</p></div>\r\n                                    <p className='track-icon'> {this.trackIcon(track)}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                       })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tracks;","import React, { Component } from 'react'\nimport './App.css';\nimport Search from './components/search/Search';\nimport Artist from './components/artist/Artist';\nimport Tracks from './components/tracks/Tracks'\n\nconst API_ADDRESS = 'https://spotify-api-wrapper.appspot.com';\nclass App extends Component {\n  state = { artist: null, tracks: [] };\n\n  componentDidMount()\n  {\n    this.searchArtist('pentatonix');\n  }\n  searchArtist = artistQuery =>\n  { \n    fetch(`${API_ADDRESS}/artist/${artistQuery}`)\n    .then(response => response.json())\n    .then(json =>\n      {\n        if(json.artists.total>0)\n        {\n          const artist = json.artists.items[0];\n          this.setState({artist});\n          fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`)\n          .then(response => response.json())\n          .then(json => this.setState({ tracks: json.tracks}))\n          .catch(error => alert(error.message));\n        }\n      } )\n      .catch(error => alert(error.message));\n  }\n    render()\n    {\n        return(\n             <div className=\"app\">\n               <h1>Music Master</h1>\n               <Search searchArtist={this.searchArtist} />\n               <Artist artist={this.state.artist} />\n               <Tracks tracks={this.state.tracks} />\n            </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}